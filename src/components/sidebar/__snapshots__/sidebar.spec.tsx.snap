// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar Component should render correctly with places 1`] = `
Object {
  "baseElement": <body>
    .emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background-image: url();
  background-repeat: no-repeat;
  background-color: #FFFFFF;
  background-position: 30px;
  height: 100px;
  padding-left: 90px;
  padding-top: 12px;
  padding-right: 12px;
  border-bottom: 0.75px solid #D6D6D6;
  -webkit-transition: box-shadow 0.3s;
  transition: box-shadow 0.3s;
}

.emotion-4 > div:first-child {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-letter-spacing: 0.0032em;
  -moz-letter-spacing: 0.0032em;
  -ms-letter-spacing: 0.0032em;
  letter-spacing: 0.0032em;
  font-weight: 600;
  line-height: 25px;
}

.emotion-4:hover {
  -webkit-transform: translateY(-1px);
  -ms-transform: translateY(-1px);
  transform: translateY(-1px);
  box-shadow: 0 0 11px rgba(33,33,33,0.2);
}

.emotion-0 {
  color: #333333;
  margin-right: auto;
  font-size: 1.3em;
}

.emotion-1 {
  justify-self: flex-end;
  color: #666666;
  font-size: 0.75em;
}

.emotion-3 {
  margin-top: 5px;
  color: #333333;
  font-weight: 400;
  font-size: 0.75em;
  -webkit-letter-spacing: 0.0032em;
  -moz-letter-spacing: 0.0032em;
  -ms-letter-spacing: 0.0032em;
  letter-spacing: 0.0032em;
}

.emotion-2 {
  margin-bottom: 2.5px;
}

<div>
      <ul>
        <li
          class="emotion-4"
        >
          <div>
            <h2
              class="emotion-0"
            >
              Vaffanapoli
            </h2>
            <h6
              class="emotion-1"
            >
              100 meters
            </h6>
          </div>
          <div
            class="emotion-3"
          >
            <div
              class="emotion-2"
            >
              Włodkowica 5/5
            </div>
            <div>
              50-250 Wrocław
            </div>
          </div>
        </li>
        <li
          class="emotion-4"
        >
          <div>
            <h2
              class="emotion-0"
            >
              Gniazdo
            </h2>
            <h6
              class="emotion-1"
            >
              1km
            </h6>
          </div>
          <div
            class="emotion-3"
          >
            <div
              class="emotion-2"
            >
              Opera 5/5
            </div>
            <div>
              50-250 Wrocław
            </div>
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul>
      <li
        class="css-14f4z7v"
      >
        <div>
          <h2
            class="css-195ik64"
          >
            Vaffanapoli
          </h2>
          <h6
            class="css-x4e08b"
          >
            100 meters
          </h6>
        </div>
        <div
          class="css-cpc7te"
        >
          <div
            class="css-1flldo8"
          >
            Włodkowica 5/5
          </div>
          <div>
            50-250 Wrocław
          </div>
        </div>
      </li>
      <li
        class="css-14f4z7v"
      >
        <div>
          <h2
            class="css-195ik64"
          >
            Gniazdo
          </h2>
          <h6
            class="css-x4e08b"
          >
            1km
          </h6>
        </div>
        <div
          class="css-cpc7te"
        >
          <div
            class="css-1flldo8"
          >
            Opera 5/5
          </div>
          <div>
            50-250 Wrocław
          </div>
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "getAllByAltText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllBySelectText": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getAllByValue": [Function],
  "getByAltText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getBySelectText": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "getByValue": [Function],
  "queryAllByAltText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllBySelectText": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryAllByValue": [Function],
  "queryByAltText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryBySelectText": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "queryByValue": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Sidebar Component should render correctly without places 1`] = `
Object {
  "baseElement": <body>
    <div>
      <ul />
    </div>
  </body>,
  "container": <div>
    <ul />
  </div>,
  "debug": [Function],
  "getAllByAltText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllBySelectText": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getAllByValue": [Function],
  "getByAltText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getBySelectText": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "getByValue": [Function],
  "queryAllByAltText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllBySelectText": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryAllByValue": [Function],
  "queryByAltText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryBySelectText": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "queryByValue": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
